import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    home: HomePage(),
  ));
}

class HomePage extends StatefulWidget {
  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  final List<String> studentNames = [
    "Ewu",
    "Patrick",
    "Chowchow",
    "BORO",
    "Rommel P",
    "Dagul",
  ];

  void _deleteStudent(String name) {
    setState(() {
      studentNames.remove(name); // Remove the student from the list
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Container(
          height: 700, // Set height to 700
          width: 948, // Set width to 1000
          color: Colors.teal.shade900,
          child: Column(
            children: [
              Container(
                padding: EdgeInsets.all(16.0), // Add some padding
                alignment: Alignment.topLeft,
                child: Text(
                  'Student List',
                  style: TextStyle(fontSize: 24, color: Colors.white, fontWeight: FontWeight.bold),
                  textAlign: TextAlign.left,
                ),
              ),
              SizedBox(
                height: 150,
                child: ListView(
                  scrollDirection: Axis.horizontal,
                  children: [
                    CircularListViewTile(name: "story ni Ewu"),
                    CircularListViewTile(name: "story ni Patrick"),
                    CircularListViewTile(name: "story ni Chowchow"),
                    CircularListViewTile(name: "story ni Boro"),
                    CircularListViewTile(name: "story ni Rommel P"),
                    CircularListViewTile(name: "story ni Dagul"),
                  ],
                ),
              ),
              Expanded(
                child: ListView.builder(
                  itemCount: studentNames.length,
                  itemBuilder: (context, index) {
                    return SquareListViewTile(
                      name: studentNames[index],
                      onDelete: _deleteStudent, // Pass the delete function
                    );
                  },
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class CircularListViewTile extends StatefulWidget {
  final String name;

  const CircularListViewTile({Key? key, required this.name}) : super(key: key);

  @override
  _CircularListViewTileState createState() => _CircularListViewTileState();
}

class _CircularListViewTileState extends State<CircularListViewTile> {
  Color _tileColor = Colors.blue.shade100; // Initial color of the tile

  void _onTileTapped() {
    setState(() {
      // Change color on tap
      _tileColor = _tileColor == Colors.blue.shade100
          ? Colors.blue.shade300 // Change to a different color
          : Colors.blue.shade100; // Revert back
    });
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: _onTileTapped, // Handle tap event
      child: Padding(
        padding: const EdgeInsets.all(4.0),
        child: Container(
          height: 150,
          width: 150, // Set width to make it circular
          decoration: BoxDecoration(
            color: _tileColor, // Use the tile color state
            shape: BoxShape.circle, // Make it circular
          ),
          alignment: Alignment.center,
          child: Text(
            widget.name,
            style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold, color: Colors.black),
            textAlign: TextAlign.center,
          ),
        ),
      ),
    );
  }
}

class SquareListViewTile extends StatelessWidget {
  final String name;
  final Function(String) onDelete; // Callback function to delete tile

  const SquareListViewTile({Key? key, required this.name, required this.onDelete}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () => onDelete(name), // Call the delete function when tapped
      child: Padding(
        padding: const EdgeInsets.all(4.0),
        child: Container(
          height: 80,
          width: 150, // Keep it rectangular for the lower list
          color: Colors.blue.shade100, // Fixed color for square tiles
          alignment: Alignment.center,
          child: Text(
            name,
            style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
            textAlign: TextAlign.center,
          ),
        ),
      ),
    );
  }
}
